# Generated by Django 4.1.7 on 2023-03-06 09:30

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('descrizione', models.CharField(default='descrizione Pass', help_text="descrizione del Pass, normalmente nome e cognome intestatario oppure contiene l'identificativo univoco dell'entità a cui è associato", max_length=80)),
                ('codice', models.CharField(help_text='codice autogenerato fatto da sigla_serie-numero', max_length=10, unique=True)),
                ('data_inizio_validita', models.DateField(help_text='data inizio validità')),
                ('data_fine_validita', models.DateField(blank=True, help_text='data fine validità', null=True)),
            ],
            options={
                'verbose_name': 'pass',
                'verbose_name_plural': 'pass',
            },
        ),
        migrations.CreateModel(
            name='ModelloStampaBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_sfondo', models.ImageField(help_text='immagine di sfondo che determina le dimensioni del Pass in mm', max_length=255, upload_to='uploads/temp')),
                ('nome_template', models.CharField(help_text='nome univoco del template', max_length=100, unique=True)),
                ('x_px_qr', models.IntegerField(help_text='coordinata bottom left origin per il print del QRCODE in mm')),
                ('y_px_qr', models.IntegerField(help_text='coordinata bottom left origin per il print del QRCODE in mm')),
                ('version', models.IntegerField(help_text='version del QRCODE https://www.qrcode.com/en/about/version.html')),
                ('box_size', models.IntegerField(help_text='dimensione del singolo box in pixel del QRCODE, (test effettuato con valore 2)')),
                ('border', models.IntegerField(help_text="bordo del qrcode in unità di larghezza del singolo box, 'spec says border should be at least four boxes wide' (test effettuato con valore 3) ")),
                ('width', models.IntegerField(blank=True, help_text='larghezza Pass in mm (105 per A6)', null=True)),
                ('height', models.IntegerField(blank=True, help_text='altezza Pass in mm (148 per A6)', null=True)),
                ('x_print_codice', models.IntegerField(blank=True, help_text='coordinata bottom left origin x in mm dove stampare il codice Pass', null=True)),
                ('y_print_codice', models.IntegerField(blank=True, help_text='coordinata bottom left origin y in mm dove stampare il codice Pass', null=True)),
            ],
            options={
                'verbose_name': 'Modello stampa pass',
                'verbose_name_plural': 'Modelli stampa pass',
            },
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='nome univoco della serie Pass(è legata normalmente ad un evento)', max_length=100, unique=True)),
                ('descrizione', models.TextField(help_text='descrizione della serie', max_length=400)),
                ('data_inizio_validita', models.DateField(help_text='data inizio validità')),
                ('data_fine_validita', models.DateField(blank=True, help_text='data fine validità', null=True)),
                ('sigla', models.CharField(help_text='sigla univoca per la serie', max_length=5, unique=True)),
                ('progr_emissione', models.IntegerField(default=0, help_text='progressivo univoco di emissione dei ticket')),
            ],
        ),
        migrations.CreateModel(
            name='SottoSerie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='nome univoco della sotto serie Pass', max_length=100)),
                ('descrizione', models.TextField(help_text='descrizione della sotto serie', max_length=400)),
                ('data_inizio_validita', models.DateField(help_text='data inizio validità')),
                ('data_fine_validita', models.DateField(blank=True, help_text='data fine validità', null=True)),
                ('modello_stampa_badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badge.modellostampabadge')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badge.serie')),
            ],
            options={
                'unique_together': {('serie', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='MetadatoModelloBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='nome metadato univoco', max_length=100)),
                ('tipo_metadato', models.CharField(choices=[('TEXT', 'Testo'), ('DATE', 'Data'), ('FILE', 'File'), ('IMAGE', 'Image'), ('HTML', 'Testo HTML')], default='TEXT', max_length=6)),
                ('x_print', models.IntegerField(blank=True, help_text='coordinata bottom left origin in mm dove stampare il campo', null=True)),
                ('y_print', models.IntegerField(blank=True, help_text='coordinata bottom left origin in mm dove stampare il campo', null=True)),
                ('font_size', models.IntegerField(blank=True, help_text='dimensione del font, se vuoto verrà utilizzato 14', null=True)),
                ('font_type', models.CharField(blank=True, help_text='Font type, se vuoto verrà utilizzato il font default', max_length=100, null=True)),
                ('stampabile', models.BooleanField(default=False)),
                ('privato', models.BooleanField(default=False)),
                ('obbligatorio', models.BooleanField(default=False)),
                ('modello_stampa_badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badge.modellostampabadge')),
            ],
            options={
                'verbose_name': 'modello metadato',
                'verbose_name_plural': 'modelli metadato',
            },
        ),
        migrations.CreateModel(
            name='MetadatoBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valore_testo', models.TextField(blank=True, max_length=1096, null=True)),
                ('valore_image', models.ImageField(blank=True, max_length=255, null=True, upload_to='uploads/temp', verbose_name='immagine')),
                ('valore_file', models.FileField(blank=True, max_length=255, null=True, upload_to='uploads/temp')),
                ('valore_data', models.DateField(blank=True, null=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badge.badge')),
                ('metadato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badge.metadatomodellobadge')),
            ],
            options={
                'verbose_name': 'metadato pass',
                'verbose_name_plural': 'metadati pass',
            },
        ),
        migrations.AddField(
            model_name='badge',
            name='sotto_serie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badge.sottoserie'),
        ),
    ]
